// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace pocket_track.Migrations
{
    [DbContext(typeof(MultiTenantDbContext))]
    [Migration("20240128191230_1st migration")]
    partial class _1stmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CategoriaFinanceira", b =>
                {
                    b.Property<string>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("CategoriaSuperiorId")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("TenantId", "Id");

                    b.HasIndex("TenantId", "CategoriaSuperiorId");

                    b.ToTable("CategoriasFinanceiras");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("ContaBancaria", b =>
                {
                    b.Property<string>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Agencia")
                        .HasColumnType("text");

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Conta")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TenantId", "Id");

                    b.ToTable("ContasBancarias");

                    b.HasAnnotation("Finbuckle:MultiTenant", true);
                });

            modelBuilder.Entity("CategoriaFinanceira", b =>
                {
                    b.HasOne("CategoriaFinanceira", null)
                        .WithMany("Subcategorias")
                        .HasForeignKey("TenantId", "CategoriaSuperiorId");
                });

            modelBuilder.Entity("CategoriaFinanceira", b =>
                {
                    b.Navigation("Subcategorias");
                });
#pragma warning restore 612, 618
        }
    }
}
